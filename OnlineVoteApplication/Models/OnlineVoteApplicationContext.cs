// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace OnlineVoteApplication.Models
{
    public partial class OnlineVoteApplicationContext : DbContext
    {
        public OnlineVoteApplicationContext()
        {
        }

        public OnlineVoteApplicationContext(DbContextOptions<OnlineVoteApplicationContext> options)
            : base(options)
        {
        }

        public virtual DbSet<ContestManagement> ContestManagements { get; set; }
        public virtual DbSet<ElectionPooling> ElectionPoolings { get; set; }
        public virtual DbSet<Mpseat> Mpseats { get; set; }
        public virtual DbSet<PartyManagement> PartyManagements { get; set; }
        public virtual DbSet<Voter> Voters { get; set; }
        public virtual DbSet<AdminUsers> AdminUsers { get; set; }
        public virtual DbSet<VotingSystem> VotingSystem { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<ContestManagement>(entity =>
            {
                entity.ToTable("ContestManagement");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ContestentName).HasMaxLength(100);

                entity.Property(e => e.CreatedDate).HasColumnType("date");

                entity.Property(e => e.EmailId)
                    .HasMaxLength(100)
                    .HasColumnName("EmailID");

                entity.Property(e => e.MobileNo).HasMaxLength(100);

                entity.Property(e => e.ModifiedDate).HasColumnType("date");

                entity.Property(e => e.PartyName).HasMaxLength(100);
            });

            modelBuilder.Entity<ElectionPooling>(entity =>
            {
                entity.ToTable("ElectionPooling");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.ContestentId)
                    .HasMaxLength(100)
                    .HasColumnName("ContestentID");

                entity.Property(e => e.CreatedDate).HasColumnType("date");

                entity.Property(e => e.PartyId)
                    .HasMaxLength(100)
                    .HasColumnName("PartyID");

                entity.Property(e => e.VoterId)
                    .HasMaxLength(100)
                    .HasColumnName("VoterID");
            });

            modelBuilder.Entity<Mpseat>(entity =>
            {
                entity.ToTable("MPSeats");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.CreatedDate).HasColumnType("date");

                entity.Property(e => e.ModifiedDate).HasColumnType("date");

                entity.Property(e => e.NoOfSeats).HasColumnName("No_of_Seats");

                entity.Property(e => e.State).HasMaxLength(50);
            });

            modelBuilder.Entity<PartyManagement>(entity =>
            {
                entity.ToTable("PartyManagement");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.CreatedDate).HasColumnType("date");

                entity.Property(e => e.ModifiedDate).HasColumnType("date");

                entity.Property(e => e.PartyName).HasMaxLength(100);
            });

            modelBuilder.Entity<Voter>(entity =>
            {
                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.CreatedDate).HasColumnType("date");

                entity.Property(e => e.EmailId)
                    .HasMaxLength(100)
                    .HasColumnName("EmailID");

                entity.Property(e => e.IsApprovedUser).HasColumnName("isApprovedUser");

                entity.Property(e => e.IsValidUser).HasColumnName("isValidUser");

                entity.Property(e => e.MobileNo).HasMaxLength(100);

                entity.Property(e => e.ModifiedDate).HasColumnType("date");

                entity.Property(e => e.VoterName).HasMaxLength(100);
            });

            modelBuilder.Entity<AdminUsers>(entity =>
            {
                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.AdminName).HasMaxLength(100);
                entity.Property(e => e.EmailID)
                    .HasMaxLength(100)
                    .HasColumnName("EmailID");

                entity.Property(e => e.MobileNo).HasMaxLength(100);

                entity.Property(e => e.CreatedDate).HasColumnType("date");

                entity.Property(e => e.ModifiedDate).HasColumnType("date");

                entity.Property(e => e.Password).HasMaxLength(100);
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}